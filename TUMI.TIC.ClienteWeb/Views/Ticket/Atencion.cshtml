@using TUMI.TIC.Modelo.Entidades
@model TUMI.TIC.ClienteWeb.Models.ModeloTicket.ViewModelTicketAtencion
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-md-12 m-b-30">
        <!-- begin page title -->
        <div class="d-block d-sm-flex flex-nowrap align-items-center">
            <div class="page-title mb-2 mb-sm-0">
                <h1>Mantenimiento de Tickets</h1>
            </div>
            <div class="ml-auto d-flex align-items-center">
                <nav>
                    <ol class="breadcrumb p-0 m-b-0">
                        <li class="breadcrumb-item">
                            <a href="/Ticket/Index"><i class="ti ti-home"></i></a>
                        </li>
                        <li class="breadcrumb-item">
                            Ticket
                        </li>
                        <li class="breadcrumb-item active text-primary" aria-current="page">Atención de Ticket</li>
                    </ol>
                </nav>
            </div>
        </div>
        <!-- end page title -->
    </div>
</div>
<div class="row tabs-contant">
    <div class="col-xxl-12">
        <div class="card card-statistics">
            <div class="card-body">
                <div class="tab round">
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active show" id="contact-09-tab" data-toggle="tab" href="#datos-usuario" role="tab" aria-controls="home-09" aria-selected="true"> Datos del usuario</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="contact-09-tab" data-toggle="tab" href="#datos-ticket" role="tab" aria-controls="contact-09" aria-selected="false"> Datos del ticket </a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade active show" id="datos-usuario" role="tabpanel" aria-labelledby="contact-09-tab">
                            <br />
                            <div class="col-md-12">
                                <div class="card card-statistics">
                                    <div class="card-body">
                                        <div class="form-row">
                                            <div class="form-group col-md-3">
                                                <label for="CodigoTicket">Nro Ticket</label>
                                                @Html.TextBoxFor(m => m.oDatosBasicos.Codigo, new { @class = "form-control", @type = "text", placeholder = "", maxlength = 150, required = true, autofocus = false, autocomplete = false, disabled = true })
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="Codigo">Fecha Registro</label>
                                                @Html.TextBoxFor(m => m.oDatosBasicos.FechaRegistro, new { @class = "form-control", @type = "text", placeholder = "", maxlength = 150, required = true, autofocus = false, autocomplete = false, disabled = true })
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label for="Codigo">Usuario Solicitante</label>
                                                @Html.TextBoxFor(m => m.oDatosBasicos.NombreSolicitante, new { @class = "form-control", @type = "text", placeholder = "Ingrese Nombre", maxlength = 150, required = true, autofocus = false, autocomplete = false, disabled = true })

                                            </div>
                                            <div class="form-group col-md-6">
                                                <label for="DescripcionArea">Unidad Orgánica</label>
                                                @Html.TextBoxFor(m => m.oDatosBasicos.UnidadOrganicaSolicitante, new { @class = "form-control", @type = "text", placeholder = "Ingrese Unidad Organica", maxlength = 150, required = true, autofocus = true, autocomplete = false, disabled = true })
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label for="Oficina">Oficina</label>
                                                @Html.TextBoxFor(m => m.oDatosBasicos.OficinaSolicitante, new { @class = "form-control", @type = "text", placeholder = "Ingrese Oficina", required = true, autofocus = false, autocomplete = false, disabled = true })

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="datos-ticket" role="tabpanel" aria-labelledby="contact-09-tab">
                            <br />
                            <div class="col-md-12">
                                <div class="card card-statistics">
                                    <div class="card-body">
                                        <div class="form-row">
                                            <div class="form-group col-md-12">
                                                <label for="DescripcionTicket">Descripción del ticket</label>
                                                @Html.TextAreaFor(m => m.oDatosBasicos.Descripcion, new { @class = "form-control", @type = "text", required = true, autofocus = false, autocomplete = false, disabled = true, @rows = 3 })
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="CelularContacto">Número de celular registrado</label>
                                                @Html.TextBoxFor(m => m.oDatosBasicos.NumeroCelularSolicitante, new { @class = "form-control", @type = "text", maxlength = 150, required = true, autofocus = true, autocomplete = false, disabled = true })
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="LugarTicket">¿Donde ocurrió el incidente?</label>
                                                @Html.TextBoxFor(m => m.oDatosBasicos.LugarIncidente, new { @class = "form-control", @type = "text", maxlength = 150, required = true, autofocus = true, autocomplete = false, disabled = true })
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="AutorizadoTicket">Autorizado Por</label>
                                                @Html.TextBoxFor(m => m.oDatosBasicos.NombreAutoriza, new { @class = "form-control", @type = "text", maxlength = 150, required = true, autofocus = true, autocomplete = false, disabled = true })
                                            </div>
                                            <div class="form-group col-md-12">
                                                <label for="ArchivoAdjunto">Archivo Adjunto (<span style="color:darkred;">Opcional</span>): </label>
                                                @if (Model.oDatosBasicos != null && !string.IsNullOrEmpty(Model.oDatosBasicos.ArchivoAdjunto?.Trim()))
                                                {
                                                    <a href="/evidencias/@Model.oDatosBasicos.ArchivoAdjunto" target="_blank">@Model.oDatosBasicos.ArchivoAdjunto</a>
                                                }
                                                else
                                                {
                                                    <text>No Adjuntó evidencia.</text>
                                                }
                                            </div>
                                            <div class="form-group col-md-12">
                                                <div class="alert alert-light alert-icon" role="alert">
                                                    <i class="fa fa-info-circle"></i> El usuario indicó que el registro del ticket afecta a:
                                                </div>
                                                <div class="checkbox form-check-inline">
                                                    @Html.CheckBoxFor(m => m.oDatosBasicos.IndicadorSeguridadInformacion, new { @class = "form-check-input", @type = "checkbox", disabled = true, @style = "width: 18px;height: 18px;" })
                                                    <label class="form-check-label" for="IndicadorSeguridadInformacion">Seguridad de la información(<span style="color:darkslategray">Afectó a la confidencialidad de un activo de información</span>)</label>
                                                </div>
                                                <div class="checkbox form-check-inline" style="margin-left:18px;">
                                                    @Html.CheckBoxFor(m => m.oDatosBasicos.IndicadorContinuidadNegocio, new { @class = "form-check-input", @style = "width: 18px;height: 18px;", disabled = true })
                                                    <label class="form-check-label" for="oDatosBasicos_IndicadorContinuidadNegocio" style="margin-left:10px;margin-top: 3px;">Continuidad del negocio(<span style="color:darkslategray">Afectó a la continuidad de tus labores</span>)</label>
                                                </div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-md-12">
    <div class="card card-statistics">
        <div class="card-header">
            <div class="card-heading">
                <h4 class="card-title" style="text-transform: none;">Datos de atención del ticket</h4>
            </div>
        </div>
        <div class="card-body">
            <div class="form-row">
                <div class="col-12 mb-2">
                    <div class="alert alert-info alert-icon" role="alert">
                        <i class="fa fa-info-circle"></i> Estimado usuario es necesario que CONSIDERE:<br />
                        <ol style="color:white;">
                            <li style="color: white;margin-left: 35px;">El sistema no permite el uso de los caracteres "< >"</li>
                        </ol>
                    </div>
                </div>
                <div class="form-group col-md-12">
                    <label for="DescripcionTicket">Describe la acción para la atención del incidente</label>
                    @Html.TextAreaFor(m => m.oDatosBasicos.AccionCierre, new { @class = "form-control", @type = "text", required = true, autofocus = false, autocomplete = false, @rows = 4 })
                </div>
                <div class="form-group col-md-3">
                    <label for="CelularContacto">Indíquenos el tipo de evidencia</label>
                    @Html.DropDownList("CodigoEvidencia", new SelectList((IEnumerable<SelectTipoEntero>)Model.oListaTipoEvidencia, "Codigo", "Descripcion"), "-- Seleccione Evidencia --", new { @id = "CodigoEvidencia", @class = "form-control" })
                </div>
                <div class="form-group col-md-7">
                    <label for="LugarTicket">Archivo de evidencia</label>
                    <input type="file" class="form-control" id="ArchivoAdjunto" accept=".jpg, .jpeg, .png, .docx, .doc, .pdf, .xlsx, .mp4, .msg" />
                </div>
                <div class="form-group col-md-2">
                    <label for="LugarTicket" style="color:white;">Botón Anexar Archivo</label>
                    <button class="btn btn-danger btn-block" onclick="AnexarArchivo();" id="btnAnexarArchivo">ANEXAR ARCHIVO</button>
                </div>
                
                <div class="datatable-wrapper table-responsive" id="tablaDocumentos">
                    <br />
                    <table id="datatable" class="display compact table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>TIPO</th>
                                <th>NOMBRE ARCHIVO</th>
                                <th>DESCARGAR</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (DocumentoTicket item in Model.oListaDocumentos)
                            {
                                <tr>
                                    <td>@item.DescripcionTipoEvidencia</td>
                                    <td>@item.NombreArchivo</td>
                                    <td style="text-align:center;"><a href="/atenciones/@item.NombreArchivo" target="_blank" class="btn btn-danger">DESCARGAR</a></td>
                                    <td style="text-align:center;">
                                        @if (Model.oDatosBasicos.IndicadorCierre)
                                        {
                                            <button onclick="EliminarDocumento('@item.CodigoDocumento');" class="btn btn-icon btn-light" disabled><i class="fa fa-trash"></i></button>
                                        }
                                        else
                                        {
                                            <button onclick="EliminarDocumento('@item.CodigoDocumento');" class="btn btn-icon btn-light"><i class="fa fa-trash"></i></button>
                                        }
                                        

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <br />
                </div>
                
                <div class="form-group col-md-12">
                    <div class="alert alert-light alert-icon" role="alert">
                        <i class="fa fa-info-circle"></i> Seleccionar cuando el incidente se haya atendido:
                    </div>
                    <div class="checkbox checbox-switch switch-primary" style="margin-left:18px;">
                        @Html.CheckBoxFor(m => m.oDatosBasicos.IndicadorCierre, new { @class = "form-check-input", @style="width: 18px;height: 18px;"})
                        <label class="form-check-label" for="oDatosBasicos_IndicadorCierre" style="margin-left:10px;margin-top: 4px;">Incidente Cerrado(Atendido por usuario)</label>
                    </div>
                    @if (Model.oDatosBasicos != null && Model.oDatosBasicos != null && !Model.oDatosBasicos.IndicadorCierre)
                    {
                        <button type="button" class="btn btn-primary" style="float: right;" onclick="GuardarTicket();">GRABAR</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function ValidarDatosDocumento() {
        if (document.querySelector('#CodigoEvidencia').value == '' || document.querySelector('#CodigoEvidencia').value == undefined) {
            swal({
                type: 'error',
                title: 'Oops...',
                text: 'Seleccione Evidencia'
            });
            return false;
        }
        const fileInput = document.getElementById('ArchivoAdjunto');
        if (fileInput.files.length == 0) {
            swal({
                type: 'error',
                title: 'Oops...',
                text: 'Seleccione Documento'
            });
            return false;
        }
        return true;
    }
    function AnexarArchivo(){
        if (ValidarDatosDocumento()) {
            let codigoTicket = document.querySelector('#oDatosBasicos_Codigo').value;
            let codigoTipoEvidencia = document.querySelector('#CodigoEvidencia').value;
            let archivos = {
                CodigoTicket: codigoTicket,
                CodigoTipoEvidencia: codigoTipoEvidencia
            };

            var formData = new FormData();
            formData.append('oArchivoJson', JSON.stringify(archivos));

            const fileInput = document.getElementById('ArchivoAdjunto');
            if (fileInput.files.length > 0) {
                formData.append('ArchivoAdjunto', fileInput.files[0]);
            }

            fetch('@Url.Action("AdjuntarEvidencia", "Ticket")', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Hubo un problema al enviar los datos.');
                    }
                    return response.json();
                })
                .then(data => {
                    swal({
                        type: 'success',
                        title: 'Registro Correcto',
                        text: 'Se registró la evidencia con exito.'
                    });
                    $('#tablaDocumentos').load('@Url.Action("ListarDocumentos", "Ticket", new { id = Model.oDatosBasicos.Codigo })');
                })
                .catch(error => {
                    console.error('Se ha producido un error:', error);
                });
        }
    }
    function EliminarDocumento(idEvidencia){
        swal({
            title: '¿Esta seguro?',
            text: "Se eliminará el documento anexado.",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si, eliminar!',
            cancelButtonText: 'No, cancelar!',
            confirmButtonClass: 'btn btn-success',
            cancelButtonClass: 'btn btn-danger',
            buttonsStyling: true,
            reverseButtons: true
        }).then((result) => {
            if (result.value) {
                let documento = {
                    Codigo: idEvidencia,
                    Descripcion: ''
                };

                var formData = new FormData();
                formData.append('documentoJson', JSON.stringify(documento));
                fetch('@Url.Action("EliminarEvidencia", "Ticket")', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Hubo un problema al enviar los datos.');
                        }
                        return response.json();
                    })
                    .then(data => {
                        swal({
                            type: 'success',
                            title: 'Eliminación Correcto',
                            text: 'Se eliminó el documento de manera exitosa.'
                        });
                        $('#tablaDocumentos').load('@Url.Action("ListarDocumentos", "Ticket", new { id = Model.oDatosBasicos.Codigo })');
                    })
                    .catch(error => {
                        console.error('Se ha producido un error:', error);
                    });
            } else if (
                result.dismiss === swal.DismissReason.cancel
            ) {
                
            }
        })
    }
    function GuardarTicket() {
       if (ValidarCierre()) {
           const registro = {
                CodigoTicket: document.querySelector('#oDatosBasicos_Codigo').value,
                AccionCierre: document.querySelector('#oDatosBasicos_AccionCierre').value,
                EstadoCierre: document.getElementById('oDatosBasicos_IndicadorCierre').checked,
                UsuarioSolicitante: document.querySelector('#oDatosBasicos_NombreSolicitante').value // Añadir Usuario Solicitante
           };
            var formData = new FormData();
            formData.append('registroJson', JSON.stringify(registro));
            fetch('@Url.Action("ActualizaCierre", "Ticket")', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Hubo un problema al enviar los datos.');
                    }
                    return response.json();
                })
                .then(data => {
                    swal({
                        type: 'success',
                        title: 'Actualización Correcta',
                        text: 'Se actualizó el ticket de manera exitosa.'
                    });
                    setInterval("location.reload()", 5000);
                })
                .catch(error => {
                    console.error('Se ha producido un error:', error);
                });

       }
    }
     function ValidarCierre(){
        if (document.querySelector('#oDatosBasicos_AccionCierre').value == '' || document.querySelector('#oDatosBasicos_AccionCierre').value == undefined) {
            swal({
                type: 'error',
                title: 'Oops...',
                text: 'Ingresar acción de cierre.'
            });
            return false;
        }
        return true;
    }
    
</script>
@if (Model.oDatosBasicos.IndicadorCierre)
{
    <script type="text/javascript">
        document.getElementById('oDatosBasicos_AccionCierre').disabled = true;
        document.getElementById('oDatosBasicos_IndicadorCierre').disabled = true;
        document.getElementById('btnAnexarArchivo').disabled = true;
    </script>
}


